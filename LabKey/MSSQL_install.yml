---
- hosts: all
  become: true
  gather_facts: false
  vars:
    ubuntu_server_repo_url: 'https://packages.microsoft.com/config/ubuntu/16.04/mssql-server-2017.list'
    ubuntu_tools_repo_url: 'https://packages.microsoft.com/config/ubuntu/16.04/prod.list'
    # PID Types
    # Evaluation
    # Developer
    # Express
    # Web
    # Standard
    # Enterprise
    # Enterprise Core
    pid: 'Developer'

    # The port for the TSQL endpoint
    tsql_endpoint_port: 1433

    # The name of the DBM endpoint 
    dbm_endpoint_name: 'dbm_endpoint'

    # the port for the DBM endpoint 
    dbm_endpoint_port: 5022

    # The SQL login and SQL username for the DBM endpoint 
    dbm_login: 'dbm_login'
    dbm_username: 'dbm_user' 

    # SA password 
    sa_password: 'password'

  handlers:
    - name: Wait for system.
      local_action: wait_for host={{ ansible_ssh_host }} port=22 state=started delay=30 timeout=60
      become: False

  tasks:
  # install mssql-server package
    - name: SQL setup
      get_url:
        url: "{{ ubuntu_server_repo_url }}"
        dest: /etc/apt/sources.list.d/mssql-server.list

    - name: refresh apt-get cache for server repo
      apt:
        update_cache: yes

    - name: install mssql-server package
      package:
        name: mssql-server
      state: latest

# setup
    - name: mssql-server setup
      mssql_conf:
       setup_sa_password: "{{ sa_password }}"
       setup_pid: "{{ pid }}"
       login_name: 'sa'
       login_password: "{{ sa_password }}"
       
# TSQL endpoint

    - name: set TSQL endpoint port
      mssql_conf:
        name: network.tcpport
        value: "{{ tsql_endpoint_port }}"
        login_name: 'sa'
        login_password: "{{ sa_password }}"

    - name: open TSQL endpoint in firewall (Ubuntu)
      ufw:
        port: "{{ tsql_endpoint_port }}"
        proto: tcp
        rule: allow

# mssql-tools package

    - name: install mssql-tools repo (Ubuntu)
      get_url:
        url: "{{ ubuntu_tools_repo_url }}"
        dest: /etc/apt/sources.list.d/mssql-tools.list

    - name: refresh apt-get cache for server repo
      apt:
        update_cache: yes

    - name: install mssql-tools package
      apt:
        name: mssql-tools
        state: latest
      environment:
      ACCEPT_EULA: 'y'

# Start mssql-server service

    - name: start sqlservr
      service:
        name: mssql-server
        state: started

    - name: Check if a reboot is required
      register: file
      stat: path=/var/run/reboot-required get_md5=no

    - name: Reboot the server
      shell: sleep 2 && /sbin/shutdown -r now "Tomcat installed"
      async: 1
      poll: 0
      ignore_errors: true
      notify:
        - Wait for system.
      when: file.stat.exists == true
